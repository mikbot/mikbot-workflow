name: MikBot CI

on:
  workflow_call:
    inputs:
      run-maven-publish:
        default: false
        type: boolean
        required: false
      update-plugin-repository:
        default: true
        type: boolean
        required: false
      update-binary-repository:
        default: false
        type: boolean
        required: false
      discord-webhook:
        default: true
        type: boolean
        required: false
      docker-name:
        default: null
        type: string
        required: false
    secrets:
      BUILDCACHE_USER:
        required: false
      BUILDCACHE_PASSWORD:
        required: false
      DISCORD_WEBHOOK:
        required: false
      GCP_ACCOUNT_KEY:
        required: false
      SIGNING_KEY:
        required: false
      SIGNING_KEY_PASSWORD:
        required: false
      DOCKER_TOKEN:
        required: false
env:
  GRADLE_BUILD_CACHE_PUSH: false
  GRADLE_BUILDCACHE_USERNNAME: ${{ secrets.BUILDCACHE_USER }}
  GRADLE_BUILDCACHE_PASSWORD: ${{ secrets.BUILDCACHE_PASSWORD }}
  GOOGLE_KEY: ${{ secrets.GCP_ACCOUNT_KEY }}
  SIGNING_KEY: ${{ secrets.SIGNING_KEY }}
  SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
  ORG_GRADLE_CACHING: true
  IS_PR: ${{ github.event_name == 'pull_request' }}
  JAVA_VERSION: 22

jobs:
  build:
    name: Build
    runs-on: ubuntu-22.04
    env:
      GRADLE_BUILD_CACHE_PUSH: true
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: ${{ env.JAVA_VERSION }}
      - uses: gradle/actions/setup-gradle@v3
      - run: ./gradlew build --scan --build-cache
        id: gradle
      - uses: Ilshidur/action-discord@0.3.2
        continue-on-error: true
        if: inputs.discord-webhook && github.event_name != 'pull_request'
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK }}
        with:
          args: 'New build scan: ${{ steps.gradle.outputs.build-scan-url }} https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}'
  update_repository:
    name: Update repository
    runs-on: ubuntu-22.04
    needs: [ build ]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      GOOGLE_CLOUD_BUCKET: gs://mikbot-plugins
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: ${{ env.JAVA_VERSION }}
      - name: 'Login to GCP'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_ACCOUNT_KEY }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: 'Create working Directory'
        run: mkdir ci-repo ci-repo-old
      - name: 'Download existing repo'
        working-directory: ci-repo-old
        run: gsutil -m cp -R $GOOGLE_CLOUD_BUCKET/* .
      - name: 'Copy index'
        run: cp ci-repo-old/plugins.json ci-repo
      - uses: gradle/actions/setup-gradle@v3
      - run: ./gradlew buildRepository --build-cache
        id: gradle        
      - name: 'Upload repo changes'
        working-directory: ci-repo
        run: gsutil -m cp -R . $GOOGLE_CLOUD_BUCKET
  update_maven:
    name: Push to maven repo
    runs-on: ubuntu-22.04
    needs: [ build ]
    if: inputs.run-maven-publish && github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: ${{ env.JAVA_VERSION }}
      - uses: gradle/actions/setup-gradle@v3
      - run: ./gradlew publish --build-cache
  update_binary:
    name: Push binary to binary repo
    runs-on: ubuntu-22.04
    needs: [ build ]
    if: inputs.update-binary-repository && github.event_name != 'pull_request' && github.ref == 'refs/heads/main'
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'read'
      id-token: 'write'
    env:
      GOOGLE_CLOUD_BUCKET: gs://mikbot-binaries
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin' # See 'Supported distributions' for available options
          java-version: ${{ env.JAVA_VERSION }}
      - name: 'Login to GCP'
        id: 'auth'
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: ${{ secrets.GCP_ACCOUNT_KEY }}
      - name: 'Set up Cloud SDK'
        uses: 'google-github-actions/setup-gcloud@v2'
      - name: 'Create working Directory'
        run: mkdir ci-repo
      - uses: gradle/actions/setup-gradle@v3
      - run: ./gradlew runtime:installCi --build-cache
      - name: 'Upload repo changes'
        working-directory: runtime/ci-repo
        run: gsutil -m cp -R . $GOOGLE_CLOUD_BUCKET
  push:
    name: Push
    runs-on: ubuntu-22.04
    needs: [ build ]
    if: github.event_name != 'pull_request' && github.ref == 'refs/heads/main' && inputs.docker-name != null
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: 22
      - uses: gradle/actions/setup-gradle@v3
      - run: ./gradlew :buildDockerImage --build-cache
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login
        env:
          GITHUB_TOKEN: ${{ secrets.DOCKER_TOKEN }}
        run: echo "$GITHUB_TOKEN" | docker login ghcr.io --username DRSchlaubi --password-stdin
      - name: Push Image
        run: |
          docker buildx build \
                  --tag ${{inputs.docker-name}}:${{github.sha}} \
                  --tag ${{inputs.docker-name}}:latest \
                  --file ./Dockerfile \
                  --output type=image,push=true .
      
